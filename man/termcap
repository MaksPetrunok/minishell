curs_termcap(3X)                                              curs_termcap(3X)



NNAAMMEE
       ttggeetteenntt,  ttggeettffllaagg,  ttggeettnnuumm,  ttggeettssttrr,  ttggoottoo,  ttppuuttss  - direct ccuurrsseess
       interface to the terminfo capability database

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ccuurrsseess..hh>>
       ##iinncclluuddee <<tteerrmm..hh>>

       eexxtteerrnn cchhaarr PPCC;;
       eexxtteerrnn cchhaarr ** UUPP;;
       eexxtteerrnn cchhaarr ** BBCC;;
       eexxtteerrnn sshhoorrtt oossppeeeedd;;

       iinntt ttggeetteenntt((cchhaarr **bbpp,, ccoonnsstt cchhaarr **nnaammee));;
       iinntt ttggeettffllaagg((cchhaarr **iidd));;
       iinntt ttggeettnnuumm((cchhaarr **iidd));;
       cchhaarr **ttggeettssttrr((cchhaarr **iidd,, cchhaarr ****aarreeaa));;
       cchhaarr **ttggoottoo((ccoonnsstt cchhaarr **ccaapp,, iinntt ccooll,, iinntt rrooww));;
       iinntt ttppuuttss((ccoonnsstt cchhaarr **ssttrr,, iinntt aaffffccnntt,, iinntt ((**ppuuttcc))((iinntt))));;

DDEESSCCRRIIPPTTIIOONN
       These routines are included as a conversion aid for programs  that  use
       the  _t_e_r_m_c_a_p  library.   Their parameters are the same and the routines
       are emulated using the _t_e_r_m_i_n_f_o database.  Thus, they can only be  used
       to  query  the  capabilities  of entries for which a terminfo entry has
       been compiled.

       The ttggeetteenntt routine loads the entry for _n_a_m_e.  It returns 1 on success,
       0  if there is no such entry, and -1 if the terminfo database could not
       be found.  The emulation ignores the buffer pointer _b_p.

       The ttggeettffllaagg routine gets the boolean entry for _i_d, or zero  if  it  is
       not available.

       The  ttggeettnnuumm  routine gets the numeric entry for _i_d, or -1 if it is not
       available.

       The ttggeettssttrr routine returns the string entry for _i_d, or zero if  it  is
       not  available.   Use  ttppuuttss to output the returned string.  The return
       value will also be copied to the buffer pointed to  by  _a_r_e_a,  and  the
       _a_r_e_a value will be updated to point past the null ending this value.

       Only  the first two characters of the iidd parameter of ttggeettffllaagg, ttggeettnnuumm
       and ttggeettssttrr are compared in lookups.

       The ttggoottoo routine instantiates the parameters into the  given  capabil-
       ity.  The output from this routine is to be passed to ttppuuttss.

       The  ttppuuttss  routine  is described on the ccuurrss__tteerrmmiinnffoo(3X) manual page.
       It can retrieve capabilities by either termcap or terminfo name.

       The variables PPCC, UUPP and BBCC are set by ttggeetteenntt to the terminfo  entry's
       data for ppaadd__cchhaarr, ccuurrssoorr__uupp and bbaacckkssppaaccee__iiff__nnoott__bbss, respectively.  UUPP
       is not used by ncurses.  PPCC is used in the ttddeellaayy__oouuttppuutt function.   BBCC
       is  used in the ttggoottoo emulation.  The variable oossppeeeedd is set by ncurses
       in a system-specific coding to reflect the terminal speed.

RREETTUURRNN VVAALLUUEE
       Except where explicitly noted, routines that return an  integer  return
       EERRRR  upon  failure  and OOKK (SVr4 only specifies "an integer value other
       than EERRRR") upon successful completion.

       Routines that return pointers return NNUULLLL on error.

BBUUGGSS
       If you call ttggeettssttrr to fetch ccaa or any other parameterized  string,  be
       aware  that it will be returned in terminfo notation, not the older and
       not-quite-compatible termcap notation.  This will not cause problems if
       all  you do with it is call ttggoottoo or ttppaarrmm, which both expand terminfo-
       style strings as terminfo.  (The ttggoottoo function, if configured to  sup-
       port  termcap,  will  check  if  the string is indeed terminfo-style by
       looking for "%p" parameters or "$<..>" delays, and  invoke  a  termcap-
       style parser if the string does not appear to be terminfo).

       Because  terminfo  conventions for representing padding in string capa-
       bilities differ from termcap's, ttppuuttss((""5500""));; will  put  out  a  literal
       "50" rather than busy-waiting for 50 milliseconds.  Cope with it.

       Note  that termcap has nothing analogous to terminfo's ssggrr string.  One
       consequence of this is that termcap applications  assume  me  (terminfo
       ssggrr00)  does not reset the alternate character set.  This implementation
       checks for, and modifies the data shown to  the  termcap  interface  to
       accommodate termcap's limitation in this respect.

PPOORRTTAABBIILLIITTYY
       The  XSI  Curses standard, Issue 4 describes these functions.  However,
       they are marked TO BE WITHDRAWN and may be removed in future  versions.

       Neither  the  XSI Curses standard nor the SVr4 man pages documented the
       return values of ttggeetteenntt correctly,  though  all  three  were  in  fact
       returned ever since SVr1.  In particular, an omission in the XSI Curses
       documentation has been misinterpreted to mean that ttggeetteenntt  returns  OOKK
       or  EERRRR.  Because the purpose of these functions is to provide compati-
       bility with the _t_e_r_m_c_a_p library, that is a defect in XCurses, Issue  4,
       Version 2 rather than in ncurses.

       External variables are provided for support of certain termcap applica-
       tions.  However, termcap applications' use of those variables is poorly
       documented, e.g., not distinguishing between input and output.  In par-
       ticular, some  applications  are  reported  to  declare  and/or  modify
       oossppeeeedd.

SSEEEE AALLSSOO
       ccuurrsseess(3X), tteerrmmiinnffoo(5), ppuuttcc(3).



                                                              curs_termcap(3X)
